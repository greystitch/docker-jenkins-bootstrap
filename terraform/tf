#!/usr/bin/env bash

set -e
set -u

show_help() {
cat << EOF
Usage: ${0##*/} <options> <terraform args>
    -h, --help             Display help
    -v, --verbose          Display verbose output
    -i, --init             Run 'terraform init' before executing the actual command
    -d, --directory        The directory to run Terraform in (must be relative to this script)
    --                     End of all options
EOF
}

readonly SCRIPTDIR=$(dirname "$(readlink -f "$0")")
readonly GOOGLE_APPLICATION_CREDENTIALS="$SCRIPTDIR/account.json"

export TF_VAR_project=spielwiese-168815
export TF_VAR_remote_state_bucket=jenkins-tf-state

init=
verbose=
directory=

while :; do
    case ${1:-} in
        -h|--help)
            show_help
            exit
            ;;
        -v|--verbose)
            verbose=true
            ;;
        -i|--init)
            init=true
            ;;
        -d|--directory)
            if [ -n "$2" ]; then
                directory="$2"
                shift
            else
                echo "ERROR: '-d|--directory' cannot be empty." >&2
                exit 1
            fi
            ;;
        --) # End of all options.
            shift
            break
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)
            break
            ;;
    esac

    shift
done

if [[ -z "$directory" ]]; then
    echo "ERROR: '-d|--directory' is required" >&2
    exit 1
fi

if [[ ! -d "$SCRIPTDIR/$directory" ]]; then
    echo "ERROR: Folder '$SCRIPTDIR/$directory' doesn't exist" >&2
    exit 1
fi

[[ -n "$verbose" ]] && set -x

pushd "$SCRIPTDIR/$directory" > /dev/null

[[ -n "$init" ]] && terraform init -reconfigure \
    "-backend-config=project=${TF_VAR_project}" \
    "-backend-config=bucket=${TF_VAR_remote_state_bucket}" \
    "-backend-config=prefix=${directory}"

terraform "$@"

popd > /dev/null
